(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{285:function(e,a,t){"use strict";t.r(a);var _=t(0),i=Object(_.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("​")]),e._v(" "),t("p",[e._v("Elasticsearch 聚合（Aggregation）是 Elasticsearch 中用于处理搜索结果的重要工具之一。它可以帮助我们对搜索结果进行各种数据统计和分析，以便更好地理解搜索结果数据的特征和趋势。")]),e._v(" "),t("h2",{attrs:{id:"什么是聚合？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是聚合？","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么是聚合？")]),e._v(" "),t("p",[e._v("聚合是 Elasticsearch 中用于处理搜索结果的重要工具。它可以对搜索结果进行各种数据统计和分析，比如按照价格、品牌、销量等各种数据维度进行分类和汇总，从而实现多维度、多条件的数据分析和展示效果。聚合可以适应不同的业务需求和场景，提供了丰富的聚合类型和选项，使得数据分析和展示更加灵活和可定制化。")]),e._v(" "),t("h2",{attrs:{id:"聚合的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合的类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 聚合的类型")]),e._v(" "),t("p",[e._v("Elasticsearch 中支持的聚合类型包括以下几种：")]),e._v(" "),t("h3",{attrs:{id:"_1-bucket-聚合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-bucket-聚合","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. Bucket 聚合")]),e._v(" "),t("p",[e._v("Bucket 聚合是一种根据某些条件将文档分为不同分组的聚合方式。常见的 Bucket 聚合包括：")]),e._v(" "),t("ul",[t("li",[e._v("Terms：按照文档中某个字段进行分组，类似于 SQL 中的 group by 语句。")]),e._v(" "),t("li",[e._v("Range：按照某个范围将文档进行分组，比如按照价格区间分组。")]),e._v(" "),t("li",[e._v("Date Histogram：按照日期进行分组，比如按照月份或者年份分组。")]),e._v(" "),t("li",[e._v("Geo Distance：按照地理距离进行分组。")]),e._v(" "),t("li",[e._v("Filters：按照多个条件进行分组。")])]),e._v(" "),t("h3",{attrs:{id:"_2-metric-聚合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-metric-聚合","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. Metric 聚合")]),e._v(" "),t("p",[e._v("Metric 聚合是一种用于计算指标的聚合方式，例如平均值、求和、最大值、最小值以及标准差等。常见的 Metric 聚合包括：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("avg")]),e._v(" 聚合：计算数值型字段的平均值。")]),e._v(" "),t("li",[t("code",[e._v("sum")]),e._v(" 聚合：计算数值型字段的总和。")]),e._v(" "),t("li",[t("code",[e._v("max")]),e._v(" 聚合：找出数值型字段中的最大值。")]),e._v(" "),t("li",[t("code",[e._v("min")]),e._v(" 聚合：找出数值型字段中的最小值。")]),e._v(" "),t("li",[t("code",[e._v("stats")]),e._v(" 聚合：计算数值型字段的统计信息，包括平均值、总和、最大值、最小值和样本数等。")]),e._v(" "),t("li",[t("code",[e._v("extended_stats")]),e._v(" 聚合：在 "),t("code",[e._v("stats")]),e._v(" 聚合的基础上，还计算标准差和方差等更详细的统计信息。")]),e._v(" "),t("li",[t("code",[e._v("cardinality")]),e._v(" 聚合：计算某个字段中不同值的数量。")]),e._v(" "),t("li",[t("code",[e._v("percentiles")]),e._v(" 聚合：计算数值型字段的百分位数（例如中位数、四分位数等）。")]),e._v(" "),t("li",[t("code",[e._v("percentile_ranks")]),e._v(" 聚合：计算数值型字段的百分位数排名。这个聚合操作可以用于确定一个值在整个数据集中的排名。")]),e._v(" "),t("li",[t("code",[e._v("value_count")]),e._v(" 聚合：计算某个字段非空值的数量。")])]),e._v(" "),t("h3",{attrs:{id:"_3-pipeline-聚合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-pipeline-聚合","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. Pipeline 聚合")]),e._v(" "),t("p",[e._v("Pipeline 聚合是一种将多个聚合操作串联起来进行计算的聚合方式。它可以支持多层级的数据处理和分析，非常适合复杂数据分析场景下的使用。")]),e._v(" "),t("h2",{attrs:{id:"聚合语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合语法","aria-hidden":"true"}},[e._v("#")]),e._v(" 聚合语法")]),e._v(" "),t("p",[e._v("Elasticsearch 的聚合语法基于 JSON 格式来进行定义和配置。一个聚合语句通常由以下几个部分组成：")]),e._v(" "),t("ul",[t("li",[e._v("Aggregation Type：聚合类型，包括 Bucket 聚合、Metric 聚合和 Pipeline 聚合。")]),e._v(" "),t("li",[e._v("Field：聚合的字段。")]),e._v(" "),t("li",[e._v("Sub-Aggregations：子聚合。")]),e._v(" "),t("li",[e._v("Options：聚合选项，比如排序、大小限制等。")])]),e._v(" "),t("p",[e._v("例如，下面是一个简单的 Term 聚合的聚合语句：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "aggs": {\n    "category": {\n      "terms": {\n        "field": "category.keyword"\n      }\n    }\n  }\n}\n')])])]),t("p",[e._v("该聚合语句将所有文档按照 category.keyword 字段进行分组，并计算每个分组的文档数。")]),e._v(" "),t("h3",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),t("p",[e._v("假设我们已经创建了一个名为 "),t("code",[e._v("product-test")]),e._v(" 的商品索引，并且该索引中包含以下四个字段：")]),e._v(" "),t("ul",[t("li",[e._v("商品名称（name）")]),e._v(" "),t("li",[e._v("品牌(brand)")]),e._v(" "),t("li",[e._v("商品图片（image）")]),e._v(" "),t("li",[e._v("商品价格（price）")]),e._v(" "),t("li",[e._v("库存数量（quantity）")])]),e._v(" "),t("p",[e._v("我们往索引里面准备一批数据")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('POST /product-test/_bulk\n{ "index": { "_id": 1 }}\n{ "name": "苹果12 Pro Max","brand":"apple", "image": "https://images.com/iphone12promax.jpg", "price": 4000, "quantity": 50 }\n{ "index": { "_id": 2 }}\n{ "name": "Samsung Galaxy S21 Ultra","brand":"三星", "image": "https://images.com/SamsungS21.jpg", "price": 6200, "quantity": 100 }\n{ "index": { "_id": 3 }}\n{ "name": "苹果14 Mini", "brand":"apple","image": "https://images.com/iphone14mini.jpg", "price": 6999, "quantity": 200 }\n{ "index": { "_id": 4 }}\n{ "name": "苹果14 Pro Max", "brand":"apple","image": "https://images.com/iphone12promax.jpg", "price": 8999, "quantity": 250 }\n{ "index": { "_id": 5 }}\n{ "name": "华为Mate 40 Pro", "brand":"华为","image": "https://images.com/HuaweiMate40.jpg", "price": 5999, "quantity": 50 }\n{ "index": { "_id": 6 }}\n{ "name": "小米14", "brand":"小米","image": "https://images.com/xiaomi14.jpg", "price": 5999, "quantity": 50 }\n')])])]),t("p",[e._v("我们使用terms(相当于SQL中的group by语句)将所有数据按照品牌分组,执行一下命令")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('POST /product-test/_search\n{\n  "aggs": {\n    "brand_bucket":{\n       "terms": {         \n       "field": "brand"    \n     }\n    }\n  }\n}\n')])])]),t("ul",[t("li",[t("code",[e._v('"aggs"')]),e._v("：表示聚合操作，用于指定需要对哪些字段进行分析。")]),e._v(" "),t("li",[t("code",[e._v('"brand_bucket"')]),e._v("：聚合操作的名称，可以自定义。在这个示例中，我们使用了 "),t("code",[e._v("terms")]),e._v(" 聚合操作，将文档根据 "),t("code",[e._v("brand")]),e._v(" 字段进行分组，然后对每个品牌出现的文档数量进行计数。")])]),e._v(" "),t("p",[e._v("返回结果")]),e._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/image-20230613113011178.png",alt:"image-20230613113011178"}})]),e._v(" "),t("p",[e._v("上述查询结果中，我们可以看到聚合操作的结果 "),t("code",[e._v("brand_bucket")]),e._v("，其中 "),t("code",[e._v("buckets")]),e._v(" 数组内包含了所有的计数信息，包括品牌名称 ("),t("code",[e._v("key")]),e._v(") 和出现的文档数量 ("),t("code",[e._v("doc_count")]),e._v(")。")]),e._v(" "),t("h2",{attrs:{id:"聚合的应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合的应用场景","aria-hidden":"true"}},[e._v("#")]),e._v(" 聚合的应用场景")]),e._v(" "),t("p",[e._v("聚合在 Elasticsearch 中具有广泛的应用场景，常见的应用场景包括：")]),e._v(" "),t("ul",[t("li",[e._v("数据分析：通过聚合功能进行数据统计和分析，比如按照价格、品牌、销量等各种数据维度进行分类和汇总，从而实现多维度、多条件的数据分析和展示效果。")]),e._v(" "),t("li",[e._v("搜索导航：聚合可以根据搜索结果中的关键词或属性值对搜索结果进行分组和聚合，从而实现搜索导航和筛选功能。")]),e._v(" "),t("li",[e._v("数据挖掘：聚合可以帮助我们发现数据中的模式和趋势，从而实现更加深入的数据挖掘和分析。")]),e._v(" "),t("li",[e._v("业务报表：通过聚合功能可以快速生成业务报表和分析结果，比如销售额、订单量等业务指标的统计和展示。")])]),e._v(" "),t("p",[e._v("通过以上介绍，相信大家对 Elasticsearch 聚合的相关知识有了更深入的了解。在实际使用时，我们要根据具体的业务需求和场景来选择合适的聚合方式，并灵活运用动态聚合功能来实现更加精细化和个性化的数据分析和展示效果。")])])},[],!1,null,null,null);a.default=i.exports}}]);