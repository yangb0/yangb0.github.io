(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{280:function(a,e,t){"use strict";t.r(e);var s=t(0),_=Object(s.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("​\t前面了解了Elasticsearch的安装及索引的基本操作。今天我们开始了解Elasticsearch文档的一些基础操作。")]),a._v(" "),t("h2",{attrs:{id:"什么是文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 什么是文档")]),a._v(" "),t("p",[a._v("在Elasticsearch中，文档是索引的基本单位。一个文档代表了一个JSON对象，它包含了一个或多个字段，每个字段有一个字段名和一个字段值。一个索引可以包含多个文档，每个文档都有一个唯一的ID。")]),a._v(" "),t("h2",{attrs:{id:"获取文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 获取文档")]),a._v(" "),t("p",[a._v("要获取文档数据，需要向Elasticsearch发送一个HTTP请求，请求方法为"),t("code",[a._v("GET")]),a._v("，")]),a._v(" "),t("p",[a._v("请求路径为"),t("code",[a._v("/{index}/_search")]),a._v("，其中"),t("code",[a._v("index")]),a._v("表示索引名称。不添加任何参数执行该请求后，默认会返回10条该索引下的文档数据。")]),a._v(" "),t("p",[a._v("也可以通过query指定查询条件，通过from 和size字段来指定分页条件。例如：以下请求可以获取name为手机的商品数据，从第0个开始，取前10个。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('GET /product-test/_search\n{\n  "from":0,\n  "size":10,\n  "query":{\n    "match": {\n      "name": "XX"\n    }\n  }\n}\n')])])]),t("h2",{attrs:{id:"创建文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建文档")]),a._v(" "),t("p",[a._v("要创建一个文档，需要向Elasticsearch发送一个HTTP请求，请求方法为"),t("code",[a._v("POST")]),a._v("，请求路径为"),t("code",[a._v("/{index}/_doc")]),a._v("，其中"),t("code",[a._v("index")]),a._v("表示索引名称。请求体为一个JSON对象，代表了要创建的文档内容。例如，以下请求可以创建一个商品文档：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('POST /product-test/_doc\n{\n  "name": "手机",\n  "image": "http://example.com/1.jpg",\n  "price": 1999,\n  "quantity": 100\n}\n')])])]),t("p",[a._v('执行该请求后，Elasticsearch会返回一个JSON对象，包含了创建的文档的相关信息，例如文档的版本号、是否创建成功，同时会返回该文档的"_id"(如下图)。')]),a._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/image-20230609105029445.png",alt:"image-20230609105029445"}})]),a._v(" "),t("p",[a._v('在Elasticsearch中，每个文档都有一个唯一的标识符，称为"_id"，它用于标识和引用文档。 "_id"是文档的一部分，它可以在创建文档时指定，也可以由Elasticsearch自动生成。')]),a._v(" "),t("p",[a._v('当使用索引API将文档添加到索引中时，可以提供一个"_id"值，如果未提供，则Elasticsearch会自动生成一个"_id"值。 文档的"_id"一旦被分配，就不能更改。')]),a._v(" "),t("p",[a._v('要查找或更新文档，必须知道文档的"_id"。 可以使用GET API通过"_id"检索特定文档，也可以使用UPDATE API更新具有特定"_id"的文档。')]),a._v(" "),t("p",[a._v('如果我们想创建文档的时候指定"_id"的值,可以通过 PUT  {index}/_doc/{id} 来指定"_id"。')]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('PUT /product-test/_doc/1\n{\n  "name": "电脑",\n  "image": "https://image.com/1.jpg",\n  "price": 5999.99,\n  "quantity": 100\n}\n')])])]),t("p",[a._v("执行 "),t("code",[a._v("GET /product-test/_search")]),a._v(' 会返回如下图所示。我们发现name为"电脑"的文档"_id"为我们指定的值。')]),a._v(" "),t("p",[t("img",{attrs:{src:"/assets/img/image-20230609110306368.png",alt:"image-20230609110306368"}})]),a._v(" "),t("h2",{attrs:{id:"根据-id获取文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据-id获取文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 根据_id获取文档")]),a._v(" "),t("p",[a._v('如果想根据文档"_id"来获取：请求路径为'),t("code",[a._v("/{index}/_doc/{id}")]),a._v("，其中"),t("code",[a._v("index")]),a._v("表示索引名称，"),t("code",[a._v("id")]),a._v("表示文档ID。执行该请求后，Elasticsearch会返回一个JSON对象，包含了要获取的文档的内容。例如，以下请求可以获取ID为"),t("code",[a._v("1")]),a._v("的商品文档：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("GET /product-test/_doc/1\n")])])]),t("p",[a._v("执行该请求后，Elasticsearch会返回一个JSON对象，包含了ID为"),t("code",[a._v("1")]),a._v("的商品文档的内容。")]),a._v(" "),t("h2",{attrs:{id:"更新文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新文档")]),a._v(" "),t("p",[a._v("要更新一个文档，需要向Elasticsearch发送一个HTTP请求，请求方法为"),t("code",[a._v("POST")]),a._v("或"),t("code",[a._v("PUT")]),a._v("，请求路径为"),t("code",[a._v("/{index}/_doc/{id}")]),a._v("，其中"),t("code",[a._v("index")]),a._v("表示索引名称，"),t("code",[a._v("id")]),a._v("表示文档ID。请求体为一个JSON对象，代表了要更新的文档内容。例如，以下请求可以将ID为"),t("code",[a._v("1")]),a._v("的商品文档的价格更新为"),t("code",[a._v("1899")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('POST /product-test/_doc/1\n{\n  "doc": {\n    "price": 6888\n  }\n}\n')])])]),t("p",[a._v("执行该请求后，Elasticsearch会返回一个JSON对象，包含了更新的文档的相关信息，例如文档的版本号、是否更新成功等。")]),a._v(" "),t("h2",{attrs:{id:"删除文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除文档")]),a._v(" "),t("p",[a._v("要删除一个文档，需要向Elasticsearch发送一个HTTP请求，请求方法为"),t("code",[a._v("DELETE")]),a._v("，请求路径为"),t("code",[a._v("/{index}/_doc/{id}")]),a._v("，其中"),t("code",[a._v("index")]),a._v("表示索引名称，"),t("code",[a._v("id")]),a._v("表示文档ID。执行该请求后，Elasticsearch会删除指定的文档。例如，以下请求可以删除ID为"),t("code",[a._v("1")]),a._v("的商品文档：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("DELETE /product-test/_doc/1\n")])])]),t("p",[a._v("执行该请求后，Elasticsearch会返回一个JSON对象，包含了删除的文档的相关信息，例如是否删除成功等。")]),a._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("本篇博客介绍了Elasticsearch7的文档基础操作，包括创建文档、更新文档、获取文档和删除文档。在实际使用中，我们可以根据具体需求进行相应的操作，例如搜索、聚合等。熟练掌握这些操作可以帮助我们更好地使用Elasticsearch进行数据分析和搜索。")])])},[],!1,null,null,null);e.default=_.exports}}]);